// import type { Metadata } from "next";
// import localFont from "next/font/local";
// import "./globals.css";
// import { ClerkProvider } from "@clerk/nextjs";
// import { ThemeProvider } from "@/components/providers/theme-provider";
// import { cn } from "@/lib/utils";
// import { ModalProvider } from "@/components/providers/modal-provider";
// import { SocketProvider } from "@/components/providers/socket-provider";
// import { QueryProvider } from "@/components/providers/query-provider";

// const geistSans = localFont({
//   src: "./fonts/GeistVF.woff",
//   variable: "--font-geist-sans",
//   weight: "100 900",
// });
// const geistMono = localFont({
//   src: "./fonts/GeistMonoVF.woff",
//   variable: "--font-geist-mono",
//   weight: "100 900",
// });

// export const metadata: Metadata = {
//   title: "madcord",
//   description: "Generated by create next app",
// };

// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   return (
//     <ClerkProvider>
//       <html lang="en" suppressHydrationWarning>
//         <body
//           className={cn(`${geistSans.variable} ${geistMono.variable} antialiased`,
//             "bg-white dark:bg-[#313338]"
//   )}>
//             <ThemeProvider
//               attribute="class"
//               defaultTheme="dark"
//               enableSystem={false}
//               storageKey="discord-theme"
//             >
//               <SocketProvider>
//                 <ModalProvider />
//                 <QueryProvider>
//                   {children}
//                 </QueryProvider>
//               </SocketProvider>
//             </ThemeProvider>
//         </body>
//       </html>
//     </ClerkProvider>
//   )
// }

import type { Metadata } from "next";
import { Open_Sans } from "next/font/google"; // Open_Sans import edildi
import "./globals.css";
import { ClerkProvider } from "@clerk/nextjs";
import { ThemeProvider } from "@/components/providers/theme-provider";
import { cn } from "@/lib/utils";
import { ModalProvider } from "@/components/providers/modal-provider";
import { SocketProvider } from "@/components/providers/socket-provider";
import { QueryProvider } from "@/components/providers/query-provider";

// Open Sans fontu burada tanımlandı
const openSans = Open_Sans({
  subsets: ["latin"],  // Latin alfabesi desteği
  variable: "--font-open-sans", // Değişken adı
  weight: ["400", "700"], // Farklı kalınlıklar tanımlandı
});

export const metadata: Metadata = {
  title: "madcord",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <ClerkProvider>
      <html lang="en" suppressHydrationWarning>
        <body
          className={cn(`${openSans.variable} antialiased`, // Geist yerine Open Sans kullanıldı
            "bg-white dark:bg-[#313338]")}
            style={{
              background: "url('/background.gif') center center fixed no-repeat",
              backgroundSize: "cover" // GIF'in tüm alanı kaplamasını sağlar
            }}
            >
            <ThemeProvider
              attribute="class"
              defaultTheme="dark"
              enableSystem={false}
              storageKey="discord-theme"
            >
              <SocketProvider>
                <ModalProvider />
                <QueryProvider>
                  {children}
                </QueryProvider>
              </SocketProvider>
            </ThemeProvider>
        </body>
      </html>
    </ClerkProvider>
  )
}

